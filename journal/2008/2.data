2008
12
22
2
{
R01
재겨냥성 어셈블러와 링커의 개발
김호균, 정지문, 이종원, 박상현, 윤종희, 백윤흥 (서울대학교)

오늘날 Consumer Electronics 시장에서 임베디드 시스템은 time-to-market
이라는 개념이 점차 중요해지고 있다. 프로세서의 개발 주기가 점차
짧아짐에 따라 소프트웨어의 개발 또한 중요하게 생각되고 있다. 그러나
새로운 프로세서에 특화된 소프트웨어 툴들을 개발 시간은 여전히 개선되지
않고 있다. 이러한 점에서 하나의 프로세서를 Architecture Description
Language 로 기술하여 이 프로세서에 맞는 소프트웨어 툴을 자동으로
생성하는 것은 중요한 일이다. 이 논문에서 우리는 GNU Binutils 툴을
이용하여 각각의 프로세서에 맞는 소프트웨어 툴들을 자동으로
생성하였다. 이 연구를 통하여 우리는 각 프로세서에 특화된 소프트웨어
툴들을 쉽고 빠르게 생성할 수 있음을 확인할 수 있었다.
}
{
R02
IR 시뮬레이터
최영규, 안민욱, 윤종희, 김용주, 김대호, 백윤흥 (서울대학교)

<p>
컴파일러는 상위 언어로 작성된 프로그램을 프로세서를 위한 하위 언어로
번역하는 역할을 한다. 이때 컴파일러는 상위언어로 작성된 프로그램을
동일한 의미(semantic)를 가진 Intermediate Representation (IR)으로 바꾼
뒤 코드 생성 작업을 하게 된다. 컴파일러가 코드 생성 작업을 잘하기
위해서는 보다 많은 정보를 IR에서 가지고 있어야 한다. 예를 들어서
프로그램 상의 hot spot을 찾아내기 위해서는 Control Flow Analysis를 해서
얻은 basic block들의 실행 빈도를 알아야한다. 그러나 이러한 정보는
바이너리 코드를 얻어서 실행해보지 않고서는 알 수 없는 정보이다.
</p><p>
이 논문에서는 이러한 불편을 줄이고자 컴파일러의 IR을 직접 시뮬레이션해
볼 수 있는 IR 시뮬레이터에 대해서 논하고자 한다. 시뮬레이션을 통해서
얻은 정보는 프로그램을 최적화하는데 유용하게 사용되며 나아가 프로그램을
가속화하기 위한 새로운 명령어를 설계하는 등의 일에 유용하게 사용될 수
있다.
</p>
}
{
R03
함수 간추림을 이용해 메모리 누수를 찾아내는 분석기
정영범, 이광근 (서울대학교)

<p>
C프로그램에서 발생할 수 있는 메모리 누수(memory leaks)를 실행 전에 찾아
주는 분석기를 제안한다. 이 분석기는 SPEC2000 벤치마크 프로그램과 여러
오픈 소스 프 로그램들에 적용시킨 결과 다른 분석기에 비해 상대적으로
뛰어난 성능을 보여준다.  총 1,777 KLOC의 프로그램에서 332개의 메모리
누수 오류를 찾아 냈으며 이 때 발 생한 허위 경보(false positive)는
47개에 불과하다(12.4%의 허위 경보율). 이 분석기 는 초당 720 LOC를
분석한다.
</P><p>
각각의 함수들이 하는 일을 간추려 그 함수들이 불려지는 곳에서
사용함으로써 모든 함수에 대해 단 한번의 분석만을 실행한다. 각각의 함수
간추림(procedural summary)은 잘 매개화 되어 함수가 불려질 때의 상황에
맞게 적용할 수 있다. 실제 프로그램들에 적용하고 피드백 받는 방법을 통해
함수가 하는 일중에 메모리 누수 를 찾는데 효과적인 정보들만으로 추리는
과정을 거쳤다. 분석은 요약 해석(abstract interpretation)에 기반하였기
때문에 C의 여러 문법 구조와 순환 호출(recursive call), 루프(loop)등은
고정점 연산(fixpoint iteration)을 통해 자연스럽게 해결한다.
</P>
}
{
R04
컨텍스트를 구분하지 않는 분석이 오히려 느린 이유와 속도를 높이는 방법
오학주, 이광근 (서울대학교)

이 논문은 컨텍스트를 구분하지 않는 분석이 낮은 정확도에도 불구하고
실제로는 빠르지 않은 이유를 설명하고 그 비용을 줄이는 방법을
제시한다. 우리는 컨텍스트를 구분하지 안는 분석에서 발생하는
거짓실행경로들로 인해서 전체 프로그램에 걸쳐서 커다란 고리가 형성되고,
이로 인해 분석비용의 대부분이 큰 고리의 고정점을 계산하느라 낭비고
있음을 관찰하였다. 이에 대한 해결책으로 어느 함수가 분석되기 시작할
때, 분석을 마치고 리턴할 지점을 따로 기억함으로써 거짓고리로 인해
발생하는 불필요한 계산을 줄이는 알고리즘을 소개하고 오픈소스 프로그램에
대한 성능향상 실험결과를 보고한다. 상용 프로그램 분석기인 Sparrow에
적용하여 실험한 결과 알고리즘을 적용하기 전에 비해서 다섯배의 분석속도
향상이 있었다.
}
{
R05
프로그램 유사도 산정을 위한 육안보정 반자동화
안효천, 이욱세, Yan Bin Tang (한양대학교)

프로그램 코드의 유사도 측정에 대한 알고리즘은 여러 가지 존재하고 있으며 유 
사도 측정 프로그램도 많은 부분 향상되어 왔다. 이런 프로그램 유사도 측정 도구는 
코드의 문법만을 검사의 대상으로 사용하게 되고 그런 점 때문에 실제 소프트웨어 
코드 분쟁에 있어서 사용하기에는 한계가 존재한다. 복제 시 변형된 코드, 소스코드 
미공개로 인한 역컴파일된 코드, 자동 생성 코드가 포함된 코드와 같은 경우에는 그 
유사도의 신뢰성이 저하되게 된다. 본 논문에서는 이런 문제점을 보안하기 위해서 
기존의 비교엔진에 더해서 사람의 경험과 판단이 개입되어 반자동으로 신뢰도 있는 
유사도를 편리하고 빠르게 보정하는 방식을 제안한다. 그리고 제안하는 방법을 사 
용하여 기존의 방식보다 향상된 결과를 도출할 수 있었다. 
}
{
R06
상황 인식 기반의 개인 맞춤형 추천 시스템
윤혜진, 신현정, 창병모 (숙명여자대학교)

본 연구는 사용자의 주변 상황을 기반으로 변화하는 상황에 자동적으로
적응하는 개인 맞춤형 추천 서비스를 개발하여 사용자에게 보다 편리하고
실용적인 서비스를 제공함을 목적으로 한다. 본 시스템은 변화하는 상황에
자동적으로 적응하기 위해 상황 적응 시스템을 이용한다. 프로그래머는 정책
기술 언어를 이용해 상황 적응 정책 파일을 작성하고, 본 연구에서 적용한
상황 적응 시스템은 작성된 정책 파일의 내용에 따라 변화된 상황에 맞도록
유비쿼터스 프로그램을 자동적으로 적응시키고, 개인 맞춤형 추천 웹
서비스는 변화된 상황을 기반으로 사람의 선호도와 검색 히스토리가 반영된
개인 맞춤형 음식점 추천 서비스를 제공한다.
}

C<

X< 목차
! toc
X>

X< 편집사
! preface
X>

X 연구논문
<
- R01
- R02
- R03
- R04
- R05
- R06
>

C>
