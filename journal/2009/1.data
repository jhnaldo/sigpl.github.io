2009
12
23
1
{
R01
알고리즘적인 학습을 통한 불변성 유추
정영범, 공순호, 이광근 (서울대학교 컴퓨터공학부)
1-18
알고리즘적인 학습(algorithmic learning), 참거짓 자동 판별기(decision
procedures), 조건식 요약(predicate abstraction), 그리고 주어진
거푸집(templates)을 이용하여 프로그램의 반복문에 대하여
정량자(quantifier)를 이용하여 표현되는 불변 성질(invariants)을
생성해내는 기술을 제시한다. 우리의 기술은 주어진 거푸집을 이용하여
임의의 1차 논리식로 표현되는 프로그램 반복문이 가지는 불변 성질을
찾아내며 불변 성질등에 존재하는 유연성을 간단한 무작위 방법(randomized
mechanism)을 통하여 활용하였다. 제안된 기술은 리눅스 소스 코드와 이전
연구의 벤치마크들로부터 정량자를 포함하는 프로그램 불변성들을 찾아낼 수
있었다.
}
{
R02
Dynamic-Partitioned SIMD 기법을 사용한 Reconfigurable Processor와 이를 위한 컴파일러 설계
권용인, 윤종희, 이종원, 김용주, 백윤흥 (서울대학교 전기컴퓨터공학부) 
19-28
<p> 
최근 다양한 응용프로그램을 위한 임베디드 프로세서가 많이 개발 되고
있다. 또한 반도체 기술의 발달과 새로운 응용프로그램들에서의 요구로
인해서 하나의 칩에서 수행되어야 하는 작업들이 더욱 많아지고
있다. 전통적으로 DSP와 ASIP은 코드의 성능을 높이기 위하여 손으로
assembly 작성을 많이 해왔다. 그러나 응용프로그램들의 복잡성과
time-to-market 제약조건 때문에 임베디드 시스템 개발자들은 High Level
Language와 컴파일러를 이용하여 코드를 생성함으로써 직접 손으로
assembly 코드를 만드는 과정에서 오는 부담을 줄이기를 원하고 있다.
</p><p>
한 편 Multimedia Processing을 위한 Reconfigurable Processor ERP는
DP-SIMD(Dynamic-Partitioned Single Insturction Multiple Data)를
사용한다. DP-SIMD기법은 Reconfigurable Processor의 Processing Unit들이
동시에 네 가지의 Instruction 중 하나를 선택하여 수행할 수 있게 함으로써
SIMD(Single Instruction Multiple Data)에 비해 Operation Efficiency를
높임으로서 H.264의 성능을 향상시켰다.
</p><p>
하지만 DP-SIMD를 활용하기 위한 assembly 코딩 작업은 많은 노력과 시간을
필요로 하기 때문에 컴파일러의 필요성이 증대되었다. 이에 대해 본 논문은
ERP를 위한 컴파일러를 개발설계하고, H.264의 de-blocking filter(DF),
intra prediction(IP)를 실험하였다. 실험결과 기존 SIMD Compiler에 비해
DF의 경우 1.48배, IP의 경우 1.83배 성능이 향상되었음을 알 수 있었다.
</p>
}
{
R03
스타일을 설정할 수 있는 웹 기반 문서 편집 환경
황준형, 윤정한 (카이스트 전산학과), 최석우 (KT 네트워크 연구소), 한태숙 (카이스트 전산학과)
29-36
문서의 특정 구조를 표시할 때 쓰이는 표현 방법을 스타일이라고 한다. 웹
문서에서 스타일을 사용하면 문서에서 쓰이는 표현 방법들을 한 곳에 모아서
문서의 내용과 표현 방법을 분리하는 것이 가능하다. 이를 통해 문서에서
필요한 정보를 추출하거나 유지 보수하는 것을 편리하게 할 수 있다. 웹에
있는 다양하고 시간에 따라 변화하는 정보를 고정된 스타일만으로 나타내는
것에는 한계가 있으며, 사용자의 필요에 따라 스타일을 바꾸어줄 필요가
있다. 기존에는 원하는 형태의 스타일을 사용하기 위해서는 웹 사이트에
있는 스타일 관련 파일을 직접 편집해 주어야 했다. 따라서 파일을 수정할
권한이 없거나 웹 프로그래밍에 대한 지식이 부족한 경우 자신이 원하는
스타일을 지정해서 사용하는 것이 쉽지 않았다. 따라서 제공되는 스타일이
사용자가 원하는 것과 다를 경우 스타일을 사용했을 때의 장점을 얻는데
어려움이 있었다. 본 논문에서는 기본으로 주어지는 스타일들을 바탕으로
사용자들이 자신의 필요에 맞는 스타일을 설정하는 것을 지원하는 웹 기반
편집 환경을 제안한다. 제안한 편집 환경을 이용하면 웹 프로그래밍에 대한
특별한 지식이 없어도 스타일을 쉽게 작성하고 적용할 수 있다. 이를
이용하면 사용자가 스타일을 유연하게 변경할 수 있으므로 스타일을
사용했을 때의 장점을 충분히 얻을 수 있다. 스타일 정보가 웹에 저장되기
때문에 스타일 정보를 여러 곳에서 사용하거나 공유하는 것도
가능하다. 우리는 제안한 편집 환경을 위키 사이트에 적용해 보았다. 편집
환경을 구현한 방법과 스타일의 활용 사례도 함께 소개한다.
}
{
R04
소스코드 보안취약성 자동진단도구 개발 사례 
권현준 (지티원), 김유경, 김현하, 도경구 (한양대학교), 신승철 (한국기술교육대학교), 안준선 (한국항공대학교), 이욱세 (한양대학교), 이은영 (동덕여자대학교), 한환수 (성균관대학교)
37-45
본 논문은 2009년도 행전안전부의 주관 및 지원 하에 한국인터넷진흥원을
중심으로 (주)지티원, (주)파수닷컴, 한국정보보호학회
소프트웨어보안연구회에서 개발한 소스코드 보안취약성 자동진단 도구 개발
사례를 소개한다. 본 과제와 관련하여 규칙 기반 취약성 분석엔진이
개발되었고, 보안 취약성 데이터베이스가 구축되었다. 개발된 소프트웨어는
전자정보시스템 취약성 분석에 적용됨으로써 국가 정보시스템의 보안 안전성
강화에 활용될 것이다.
}

C<

X< 목차
! toc
X>

X< 편집사
! preface
X>

X 연구논문
<
- R01
- R02
- R03
- R04
>

C>
